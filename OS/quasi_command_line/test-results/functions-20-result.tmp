(TEST 20) cmdcol_print_2
COMMENTS:

program: ./test_cmd cmdcol_print_2
Failure messages:
- FAILURE: Output Mismatch at lines marked

--- Side by Side Differences ---
- Expect output in: test-results/raw/functions-20-expect.tmp
- Acutal output in: test-results/raw/functions-20-actual.tmp
- Differing lines have a character like '|' in the middle\n
==== EXPECT ====                                                                          ==== ACTUAL ====                                                                       
{                                                                                         {
    // Adds to a cmd collection, runs commands, and                                           // Adds to a cmd collection, runs commands, and
    // the prints showing most commands in the RUN                                            // the prints showing most commands in the RUN
    // state. Then waits for them to complete via                                             // state. Then waits for them to complete via
    // cmdcol_update_state(). Calls cmdcol_print() to                                         // cmdcol_update_state(). Calls cmdcol_print() to
    // show most commands in EXIT(..) state.                                                  // show most commands in EXIT(..) state.
    char *children[][5] = {                                                                   char *children[][5] = {
      {"cat","test-data/quote.txt",NULL},                                                       {"cat","test-data/quote.txt",NULL},    
      {"ls","-a","test-data/stuff",NULL},                                                       {"ls","-a","test-data/stuff",NULL},
      {"grep","-i", "flurbo ","test-data/gettysburg.txt",NULL},                                 {"grep","-i", "flurbo ","test-data/gettysburg.txt",NULL},
      {"ls","-a","-F","test-data/stuff",NULL},                                                  {"ls","-a","-F","test-data/stuff",NULL},
      {"gcc","-o","test-data/print_args",                                                       {"gcc","-o","test-data/print_args",
                   "test-data/print_args.c",NULL},                                                           "test-data/print_args.c",NULL},
      {NULL},                                                                                   {NULL},
    };                                                                                        };
    cmdcol_t cmdcol_actual = {};                                                              cmdcol_t cmdcol_actual = {};
    cmdcol_t *cmdcol = &cmdcol_actual;                                                        cmdcol_t *cmdcol = &cmdcol_actual;
    for(int i=0; children[i][0] != NULL; i++){                                                for(int i=0; children[i][0] != NULL; i++){
      cmd_t *cmd = cmd_new(children[i]);                                                        cmd_t *cmd = cmd_new(children[i]);
      cmdcol_add(cmdcol, cmd);                                                                  cmdcol_add(cmdcol, cmd);
      cmd_start(cmd);                                                                           cmd_start(cmd);
    }                                                                                         }
    printf("Before cmdcol_update_state()\n");                                                 printf("Before cmdcol_update_state()\n");
    cmdcol_print(cmdcol);       // RUN                                                        cmdcol_print(cmdcol);       // RUN

    cmdcol_update_state(cmdcol, DOBLOCK);                                                     cmdcol_update_state(cmdcol, DOBLOCK);

    printf("\n");                                                                             printf("\n");
    printf("After cmdcol_update_state()\n");                                                  printf("After cmdcol_update_state()\n");
    cmdcol_print(cmdcol);       // EXIT(..)                                                   cmdcol_print(cmdcol);       // EXIT(..)
    cmdcol_freeall(cmdcol);                                                                   cmdcol_freeall(cmdcol);
}                                                                                         }
Before cmdcol_update_state()                                                              Before cmdcol_update_state()
JOB  #PID      STAT   STR_STAT OUTB COMMAND                                               JOB  #PID      STAT   STR_STAT OUTB COMMAND
0    %0          -1        RUN   -1 cat test-data/quote.txt                               0    %0          -1        RUN   -1 cat test-data/quote.txt 
1    %1          -1        RUN   -1 ls -a test-data/stuff                                 1    %1          -1        RUN   -1 ls -a test-data/stuff 
2    %2          -1        RUN   -1 grep -i flurbo  test-data/gettysburg.txt              2    %2          -1        RUN   -1 grep -i flurbo  test-data/gettysburg.txt 
3    %3          -1        RUN   -1 ls -a -F test-data/stuff                              3    %3          -1        RUN   -1 ls -a -F test-data/stuff 
4    %4          -1        RUN   -1 gcc -o test-data/print_args test-data/print_args.c    4    %4          -1        RUN   -1 gcc -o test-data/print_args test-data/print_args.c 

After cmdcol_update_state()                                                               After cmdcol_update_state()
JOB  #PID      STAT   STR_STAT OUTB COMMAND                                               JOB  #PID      STAT   STR_STAT OUTB COMMAND
0    %0           0    EXIT(0)  125 cat test-data/quote.txt                               0    %0           0    EXIT(0)  125 cat test-data/quote.txt 
1    %1           0    EXIT(0)   52 ls -a test-data/stuff                                 1    %1           0    EXIT(0)   52 ls -a test-data/stuff 
2    %2           1    EXIT(1)    0 grep -i flurbo  test-data/gettysburg.txt              2    %2           1    EXIT(1)    0 grep -i flurbo  test-data/gettysburg.txt 
3    %3           0    EXIT(0)   55 ls -a -F test-data/stuff                            | 3    %3           0    EXIT(0)   59 ls -a -F test-data/stuff 
4    %4           0    EXIT(0)    0 gcc -o test-data/print_args test-data/print_args.c    4    %4           0    EXIT(0)    0 gcc -o test-data/print_args test-data/print_args.c 
ALERTS:                                                                                   ALERTS:
@!!! cat[%0]: EXIT(0)                                                                     @!!! cat[%0]: EXIT(0)
@!!! ls[%1]: EXIT(0)                                                                      @!!! ls[%1]: EXIT(0)
@!!! grep[%2]: EXIT(1)                                                                    @!!! grep[%2]: EXIT(1)
@!!! ls[%3]: EXIT(0)                                                                      @!!! ls[%3]: EXIT(0)
@!!! gcc[%4]: EXIT(0)                                                                     @!!! gcc[%4]: EXIT(0)
                                                                                        (
--- Line Differences ---
EXPECT:  46) 3    %3           0    EXIT(0)   55 ls -a -F test-data/stuff 
ACTUAL:  46) 3    %3           0    EXIT(0)   59 ls -a -F test-data/stuff 

--- Valgrind Log from: test-results/raw/functions-20-valgrd.tmp ---
==769== Memcheck, a memory error detector
==769== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==769== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==769== Command: ./test_cmd cmdcol_print_2
==769== Parent PID: 768
==769== 
==769== error calling PR_SET_PTRACER, vgdb might block
==769== 
==769== HEAP SUMMARY:
==769==     in use at exit: 0 bytes in 0 blocks
==769==   total heap usage: 46 allocs, 46 frees, 12,434 bytes allocated
==769== 
==769== All heap blocks were freed -- no leaks are possible
==769== 
==769== For counts of detected and suppressed errors, rerun with: -v
==769== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

